import { Transcription } from "./transcriber";
export interface YoutubeSubsOptions {
    /**
     * The language of the subtitles.
     * @default 'en'
     */
    lang: string;
}
type Options = Partial<YoutubeSubsOptions>;
export type ChapterTranscriptions = {
    title: string;
    from: number;
    to: number;
    captions: Transcription[];
};
export declare class YoutubeSubs {
    private static options;
    /**
     * Get captions from a YouTube video.
     * @param videoId string
     * @param options Options
     * @returns Transcription[]
     */
    static getSubs(videoId: string, options?: Options): Promise<Transcription[]>;
    /**
     * Get all chapters and its captions from a YouTube video.
     * @param videoId string
     * @param options Options
     * @returns ChapterTranscriptions[]
     */
    static getSubsByChapter(videoId: string, options?: Options): Promise<ChapterTranscriptions[]>;
    /**
     * Get captions from a YouTube video by time.
     * @param videoId string
     * @param from number | null
     * @param to number | null
     * @param options Options
     * @returns
     */
    static getSubsByTime(videoId: string, from?: number | null, to?: number | null, options?: Options): Promise<Transcription[]>;
}
export {};
